(defwindow bar
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "0%"
                               :width "100%"
                               :height "35px"
                               :anchor "top center")
           :stacking "fg"
           :reserve (struts :distance "35px" :side "top")
           :windowtype "dock"
           :wm-ignore false
           (centerbox :orientation "horizontal" (sysmonitor) (datetime) (wmcontrols)))

(defwidget datetime []
           (box :orientation "horizontal"
                :halign "center"
                :class "datetime"
                "${datetime}"))
(defpoll datetime
         :interval "1s"
         `date +"%a,  %b %d %Y  %H:%M:%S"`)

(defwidget sysmonitor []
           (box :orientation "horizontal"
                :halign "start"
                (metric :label "CPU" (caution :t 60 :leq "ok" :gt "danger" :value {round(EWW_CPU.avg, 0)} :postfix "%"))
                (metric :label "RAM" (caution :t 25 :leq "ok" :gt "danger" :value {round(EWW_RAM.used_mem_perc, 0)} :postfix "%"))
                (metric :label "SWAP" (caution :t 80 :leq "ok" :gt "danger" :value {round((EWW_RAM.total_swap - EWW_RAM.free_swap) / EWW_RAM.total_swap, 0)} :postfix "%"))
                (metric :label "TEMP" (caution :t 50 :leq "ok" :gt "danger" :value {EWW_TEMPS.CPU} :postfix "â„ƒ"))
                (metric :label "BAT" (caution :t 20 :leq "danger" :gt "ok" :value {EWW_BATTERY.BAT0.capacity} :postfix "%"))
                (metric :label "MIC" (literal :content "${mic}"))
                ))
(defwidget metric [label]
           (box :orientation "horizontal"
                :class "metric"
                (box :class "metric-label" "${label}")
                (box :class "metric-value" (children))))
(defwidget caution [t leq gt value postfix]
           (box :class {value <= t ? "caution-${leq}" : "caution-${gt}"} "${value}${postfix}"))
(defpoll mic
         :interval "200ms"
         `if { pacmd list-sources | grep -q "muted: no"; }; then echo "(box :class 'mic-on' 'ON')"; else echo "(box :class 'mic-off' 'OFF')"; fi`)

(defwidget wmcontrols []
           (box :orientation "horizontal"
                :halign "end"
                (workspace-bit)))

(defwidget workspace-bit []
           (box :orientation "horizontal"
                :class "workspace-bit"
                "${workspace_name}"))
(defpoll workspace_name
         :interval "200ms"
         `wmctrl -d | grep '^[0-9].\\+ \\*' | tr -s ' ' | cut -d' ' -f9-`)

; ---

(defwindow calendar
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "40px"
                               :width "20%"
                               :height "20%"
                               :anchor "top center")
           :stacking "fg"
           :windowtype "dock"
           :wm-ignore false
           (calendar))

; vim: ft=lisp
